# Spring Application
spring.application.name=library-manager

# Database config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA & Hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Silences detailed logs from Hibernates JTA transaction handler by setting the logging level to WARN, this shows warnings or errors
logging.level.org.hibernate.engine.transaction.jta.platform.internal=WARN

# Sets the logging level for Spring Security to WARN.
logging.level.org.springframework.security=WARN

# Sets the logging level for my application?s package to WARN (warn + error)
logging.level.dev.bakr.readiction_backend=WARN

# Email config using Gmail's SMTP (Simple Mail Transfer Protocol) server, which is used to send emails from a client application or email service.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SUPPORT_USERNAME}
spring.mail.password=${APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT config using a special key that only my server knows, used to prove that the JWT is valid and not tampered with.
security.jwt.secret-key=${JWT_SECRET_KEY}
security.jwt.expiration-time=${JWT_EXPIRATION_TIME}

# Tomcat config
server.port=8080

# Spring Actuator config
management.endpoints.web.exposure.include=health,beans

